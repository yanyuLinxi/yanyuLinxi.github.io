<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>钢琴学习 on Pure theme for Hugo</title>
    <link>https://yanyuLinxi.github.io/tags/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 钢琴学习 on Pure theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY 4.0 CN</copyright>
    <lastBuildDate>Sun, 13 Jun 2021 09:35:45 +0800</lastBuildDate>
    
        <atom:link href="https://yanyuLinxi.github.io/tags/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Numpy学习笔记</title>
      <link>https://yanyuLinxi.github.io/2021/09/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 29 Sep 2021 08:31:57 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>API 创建数组 numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0) np.linspace(2.0, 3.0, num=5) output =&amp;gt; array([2. , 2.25, 2.5 , 2.75, 3. ]) np.random random.rand(d0, d1, &amp;hellip;, dn) d为size np.random.randn(d0, d1, &amp;hellip;, dn) Return a sample (or samples) from the “standard normal” distribution. random.randint(low, high=None, size=None, dtype=int) np.random.randint([1, 5,</description>
    </item>
    
    <item>
      <title>Scikit Learn学习笔记</title>
      <link>https://yanyuLinxi.github.io/2021/09/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 28 Sep 2021 20:18:10 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>概览 整体框架 unsupervised unsupervised methods cluster API validation API metrics models embedding Cluster Overview Unsupervised dimensionality reduction PCA Random projections johnson_lindenstrauss_min_dim GaussianRandomProjection SparseRandomProjection Feature agglomeration 概览 整体框架 # set numpy seed. when it comes to random functions, please leave a function to set seed. # load data x, y = sklearn.data # train test data split. # create model entity model =</description>
    </item>
    
    <item>
      <title>Analyzing Data Granularity Levels for Insider Threat Detection Using Machine Learning</title>
      <link>https://yanyuLinxi.github.io/2021/09/analyzing-data-granularity-levels-for-insider-threat-detection-using-machine-learning/</link>
      <pubDate>Tue, 28 Sep 2021 09:24:22 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/analyzing-data-granularity-levels-for-insider-threat-detection-using-machine-learning/</guid>
      <description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 Overview Data Collection and Pre-processing ML for Data Analytics 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是</description>
    </item>
    
    <item>
      <title>无监督聚类算法学习总结</title>
      <link>https://yanyuLinxi.github.io/2021/09/%E6%97%A0%E7%9B%91%E7%9D%A3%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 27 Sep 2021 15:28:41 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/%E6%97%A0%E7%9B%91%E7%9D%A3%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>目录： 概览 1. 基于规则 1.1. 随机森林 1.2. SVM 1.3. 投影寻踪 2. 基于神经网络 2.1. AutoEncoder 3. 其他 3.1. 关联分析 4. 其他知识 回归问题 概览 https://scikit-learn.org/stable/modules/clustering.html 中文： https://sklearn.apachecn.org/docs/master/22.html#k-means 1. 基于规则 1.1. 随机森林 众多树。每</description>
    </item>
    
    <item>
      <title>Insider Threat Detection via Hierarchical Neural Temporal Point Process</title>
      <link>https://yanyuLinxi.github.io/2021/09/insider-threat-detection-via-hierarchical-neural-temporal-point-process/</link>
      <pubDate>Sun, 26 Sep 2021 10:42:54 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/insider-threat-detection-via-hierarchical-neural-temporal-point-process/</guid>
      <description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description>
    </item>
    
    <item>
      <title>Log2Vec a Heterogeneous Graph Embedding Based Approach for Detecting Cyber Threats Within Enterprise</title>
      <link>https://yanyuLinxi.github.io/2021/09/log2vec-a-heterogeneous-graph-embedding-based-approach-for-detecting-cyber-threats-within-enterprise/</link>
      <pubDate>Sat, 25 Sep 2021 14:45:30 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/log2vec-a-heterogeneous-graph-embedding-based-approach-for-detecting-cyber-threats-within-enterprise/</guid>
      <description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 概览 Graph Construction 关系详细定义 Graph Embedding Detection k-means簇聚类算法简单讲解： log2Vec 的聚类算法 random walk 5. 解决了什么问题（贡</description>
    </item>
    
    <item>
      <title>An Insider Threat Detection Approach Based on Mouse Dynamics and Deep Learning</title>
      <link>https://yanyuLinxi.github.io/2021/09/an-insider-threat-detection-approach-based-on-mouse-dynamics-and-deep-learning/</link>
      <pubDate>Sat, 25 Sep 2021 10:30:25 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/an-insider-threat-detection-approach-based-on-mouse-dynamics-and-deep-learning/</guid>
      <description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description>
    </item>
    
    <item>
      <title>Deep Learning for Unsupervised Insider Threat Detection in Structured Cybersecurity DataStreams</title>
      <link>https://yanyuLinxi.github.io/2021/09/deep-learning-for-unsupervised-insider-threat-detection-in-structured-cybersecurity-datastreams/</link>
      <pubDate>Fri, 24 Sep 2021 19:33:54 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/deep-learning-for-unsupervised-insider-threat-detection-in-structured-cybersecurity-datastreams/</guid>
      <description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 概述 细节 Feature Extraction Structured Stream Neural Network DNN RNN 输出 内部危害检测： 6. 实验结果 5. 解决了什么问题（贡献） 7. 如何想到该方法 8. 我</description>
    </item>
    
    <item>
      <title>Anomaly Based Insider Threat Detection Using Deep Autoencoders</title>
      <link>https://yanyuLinxi.github.io/2021/09/anomaly-based-insider-threat-detection-using-deep-autoencoders/</link>
      <pubDate>Thu, 16 Sep 2021 20:21:40 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/anomaly-based-insider-threat-detection-using-deep-autoencoders/</guid>
      <description>目录： 1. 综述翻译 1.1 发表 2. Tag 3. 任务描述 4. 方法 概览 特征提取： 自编码器 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点</description>
    </item>
    
    <item>
      <title>Deep Learning for Insider Threat Detection Review Challenges and Opportunities</title>
      <link>https://yanyuLinxi.github.io/2021/09/deep-learning-for-insider-threat-detection-review-challenges-and-opportunities/</link>
      <pubDate>Thu, 16 Sep 2021 18:47:40 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/deep-learning-for-insider-threat-detection-review-challenges-and-opportunities/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 Deep Feedforward Neural Network RecurrentNeuralNetwork. Convolutional Neural Network GraphNeuralNetwork. Challenges 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10.</description>
    </item>
    
    <item>
      <title>DEMIDS a Misuse Detection System for Database Systems</title>
      <link>https://yanyuLinxi.github.io/2021/09/demids-a-misuse-detection-system-for-database-systems/</link>
      <pubDate>Thu, 16 Sep 2021 15:38:15 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/demids-a-misuse-detection-system-for-database-systems/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description>
    </item>
    
    <item>
      <title>基于CNN LSTM的用户购买行为预测模型</title>
      <link>https://yanyuLinxi.github.io/2021/09/%E5%9F%BA%E4%BA%8Ecnn-lstm%E7%9A%84%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Thu, 16 Sep 2021 15:30:42 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/%E5%9F%BA%E4%BA%8Ecnn-lstm%E7%9A%84%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description>
    </item>
    
    <item>
      <title>Detection and Prevention of Malicious Activites on RdBMS Relational Database Management Systems</title>
      <link>https://yanyuLinxi.github.io/2021/09/detection-and-prevention-of-malicious-activites-on-rdbms-relational-database-management-systems/</link>
      <pubDate>Thu, 16 Sep 2021 14:48:04 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/detection-and-prevention-of-malicious-activites-on-rdbms-relational-database-management-systems/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description>
    </item>
    
    <item>
      <title>DBrain数据库异常分析功能分析</title>
      <link>https://yanyuLinxi.github.io/2021/09/dbrain%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%82%E5%B8%B8%E5%88%86%E6%9E%90%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 15 Sep 2021 16:35:37 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/dbrain%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%82%E5%B8%B8%E5%88%86%E6%9E%90%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>https://cloud.tencent.com/document/product/1130/49731 功能记录 支持7，30，3个月的数据。 异常行为统计 异常时间登录 异常操作 异常ip登录 异常资源访问 告警列表 目前总结的几种检测异常的方法（全局，并</description>
    </item>
    
    <item>
      <title>一种无监督的数据库用户行为异常检测方法</title>
      <link>https://yanyuLinxi.github.io/2021/09/%E4%B8%80%E7%A7%8D%E6%97%A0%E7%9B%91%E7%9D%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 15 Sep 2021 15:45:46 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/%E4%B8%80%E7%A7%8D%E6%97%A0%E7%9B%91%E7%9D%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 概述 定义 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于</description>
    </item>
    
    <item>
      <title>Using RNN for Dexompiliation</title>
      <link>https://yanyuLinxi.github.io/2021/09/using-rnn-for-dexompiliation/</link>
      <pubDate>Sun, 12 Sep 2021 16:27:43 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/using-rnn-for-dexompiliation/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 预处理 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业</description>
    </item>
    
    <item>
      <title>Recognizing Functions in Binaries With Neural Networks</title>
      <link>https://yanyuLinxi.github.io/2021/09/recognizing-functions-in-binaries-with-neural-networks/</link>
      <pubDate>Sun, 12 Sep 2021 15:34:32 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/recognizing-functions-in-binaries-with-neural-networks/</guid>
      <description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description>
    </item>
    
    <item>
      <title>Leetcode1_数组</title>
      <link>https://yanyuLinxi.github.io/2021/09/leetcode1_%E6%95%B0%E7%BB%84/</link>
      <pubDate>Thu, 09 Sep 2021 15:05:06 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/leetcode1_%E6%95%B0%E7%BB%84/</guid>
      <description>登录 https://zhuanlan.zhihu.com/p/119999079 704 二分法搜查数组 这个可以用递归处理的问题，就可以用循环处理。 多思考极端元素时的处理办法。一个元素，两个元素等。 注意处理边界，每次mid</description>
    </item>
    
    <item>
      <title>Vue学习</title>
      <link>https://yanyuLinxi.github.io/2021/09/vue%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 08 Sep 2021 17:00:28 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/vue%E5%AD%A6%E4%B9%A0/</guid>
      <description>其他 使用Vscode写html，一个！号后可以选择模板。 引入Vue框架 &amp;lt;script src=&amp;quot;https://unpkg.com/vue@next&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 练手： https://gitee.com/panjiachen/vue-admin-template 基础 创建实例, 支持链式。返回同一个实例。 Vue.createAPP({}) .component(&amp;quot;&amp;quot;) .directive 挂载到组件 const</description>
    </item>
    
    <item>
      <title>信息安全技术大赛两个项目汇报</title>
      <link>https://yanyuLinxi.github.io/2021/09/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%8A%A5/</link>
      <pubDate>Sun, 05 Sep 2021 14:49:07 +0800</pubDate>
      
      <guid>https://yanyuLinxi.github.io/2021/09/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%8A%A5/</guid>
      <description>DeepVuler 面向开源社区的漏洞挖掘平台 目标 通过社区对代码漏洞的讨论进行分析，完成以下几个任务： 发现社区讨论的新漏洞情报，使用神经网络对漏洞讨论内容进行</description>
    </item>
    
  </channel>
</rss>
