<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python相关库学习 on 阳阳的人间旅游日记</title><link>https://yanyulinxi.github.io/tags/python%E7%9B%B8%E5%85%B3%E5%BA%93%E5%AD%A6%E4%B9%A0/</link><description>Recent content in python相关库学习 on 阳阳的人间旅游日记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 06 Jun 2022 15:21:44 +0800</lastBuildDate><atom:link href="https://yanyulinxi.github.io/tags/python%E7%9B%B8%E5%85%B3%E5%BA%93%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Python不常用技巧</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E4%B8%8D%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 06 Jun 2022 15:21:44 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E4%B8%8D%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7/</guid><description>不常用技巧 为对象添加属性 a = object() setattr(a, &amp;#34;attrname&amp;#34;, attrvalue) 将两个list组装成字典 a, b = [1,2,3], [4,5,6] dict(zip(a, b)) 解包 # *星号可以解包，即接触一个list，但是只能作为参数传递给函</description></item><item><title>Typing使用规范</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/typing%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</link><pubDate>Mon, 06 Jun 2022 14:21:47 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/typing%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</guid><description>简介 Python 是动态语言，其类型检查发生在运行阶段(run time)。所以在代码编写的时候，其变量的类型是可变的。这为代码编写带来了方便，但也带来了</description></item><item><title>Argparse使用规范</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/argparse%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</link><pubDate>Mon, 06 Jun 2022 10:38:01 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/argparse%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83/</guid><description>简介 argparse 是python用于解析命令行参数的。它有基本的模板，我们可以套用 代码示例 代码框架 import argparse # 添加RawTextHelpFormatter后，</description></item><item><title>Pytest测试框架</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pytest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</link><pubDate>Wed, 04 May 2022 15:02:50 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pytest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</guid><description>1. Pytest简介 Pytest 是用于测试 Python 应用的 Python 库。它是nose测试和unittest测试的替代方法。相比于后两者来说，Pytest更加简易。Vsc</description></item><item><title>Tree_sitter基础教程</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/tree_sitter%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link><pubDate>Tue, 19 Apr 2022 09:24:18 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/tree_sitter%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid><description>安装 首先需要安装VC++14.0或以上。下载链接：https://docs.microsoft.com/en-US/cpp/windows/</description></item><item><title>Pandas学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 09:40:51 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>资料 https://github.com/datawhalechina/joyful-pandas pandas 临时杂碎知识点记录 .null()检测是否有空值 .sum()对pandas数值进行求和 .unique()检测pandas中的独一值。 t</description></item><item><title>Shap学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 14 Nov 2021 17:08:21 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>api 随笔记 shap.force_plot这个函数应该是打印对于这个样本，哪些权重做出了贡献。</description></item><item><title>Gensim学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 22 Oct 2021 10:29:55 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>使用腾讯中文语料库 腾讯词向量使用方法： https://www.jianshu.com/p/65a29663130a 语料库地址： https://ai.tencent.com/ailab/nlp/zh/embedding.html 语料库 chinese-word-vectors: https://github.com/Embedding/Chinese-Word-Vectors 300维 腾讯词向量： https://www.jianshu.com/p/65a29663130a 200维，800万词。 其他多语言语料库 https://sites.google.com/site/rmyeid/projects/polyglot 使用gensi</description></item><item><title>Python命名规范</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link><pubDate>Tue, 12 Oct 2021 10:37:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid><description>从大到小 从大到小 命名规范 样例 包名 全小写 sklearn 模块名 全小写，下划线分割 sklearn.model_selection 类名 首字母大写、驼峰(类名不加下划线) ThisIsMyClass, TruncatedSVD 函数名 全小写、用下划线增加可读性</description></item><item><title>PyOD学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 09 Oct 2021 15:51:08 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>注意 里面有很多需要其他库的神经网络。比如keras。比如tensorflow。为了避免最后太过复杂，这些自己写最好。 样例 生成污染数据 contamination = 0.1 #</description></item><item><title>Seaborn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 30 Sep 2021 08:51:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>seaborn结合pandas来画好看的图。 最后网页显示的统计图，可以用seaborn画。 基本使用 seaborn中两种函数，第一种返回当前设</description></item><item><title>常用其他python库</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</link><pubDate>Thu, 30 Sep 2021 08:41:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</guid><description>常用库 yellowbrick 用来可视化画图的。 seaborn高端matplotlib画图的。 prettyplotlib 配合seaborn来画漂亮的图。 plotly Express 可视化。 tqdm进度条。 lin</description></item><item><title>Matplotlib-2学习</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 10:20:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 setting 不同风格 plt.style.available 打印样式列表 plt.style.use(&amp;lsquo;seaborn&amp;rsquo;) 使用seaborn风格的图。 参数color可选项： b:blue c:cyan g:green k:black m:magenta r:red w:white y:yellow 结束时 plt.legend() 在图上放置图例。 设置坐标轴 plt.xlim(-1, 3.5) #设置</description></item><item><title>Numpy学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 08:31:57 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>API 创建数组 numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0) np.linspace(2.0, 3.0, num=5) output =&amp;gt; array([2. , 2.25, 2.5 , 2.75, 3. ]) np.random random.rand(d0, d1, &amp;hellip;, dn) d为size np.random.randn(d0, d1, &amp;hellip;, dn) Return a sample (or samples) from the “standard normal” distribution. random.randint(low, high=None, size=None, dtype=int) np.random.randint([1, 5,</description></item><item><title>Scikit Learn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 28 Sep 2021 20:18:10 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 整体框架 unsupervised unsupervised methods cluster API validation API metrics models embedding Cluster Overview Unsupervised dimensionality reduction PCA Random projections johnson_lindenstrauss_min_dim GaussianRandomProjection SparseRandomProjection Feature agglomeration 概览 整体框架 # set numpy seed. when it comes to random functions, please leave a function to set seed. # load data x, y = sklearn.data # train test data split. # create model entity model =</description></item></channel></rss>