<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 阳阳的人间旅游日记</title><link>https://yanyulinxi.github.io/post/</link><description>Recent content in Posts on 阳阳的人间旅游日记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 07 Apr 2022 10:24:25 +0800</lastBuildDate><atom:link href="https://yanyulinxi.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>（置顶）机器学习面经总结</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%BD%AE%E9%A1%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 07 Apr 2022 09:58:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%BD%AE%E9%A1%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</guid><description>机器学习面经知识 笔者是22年参加实习的机器学习方向的学生，自己总结了面经，先开源出来供大家学习。</description></item><item><title>Bat脚本常用命令浅学</title><link>https://yanyulinxi.github.io/post/study/pcsoftware/bat%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B5%85%E5%AD%A6/</link><pubDate>Thu, 07 Apr 2022 10:24:25 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/pcsoftware/bat%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B5%85%E5%AD%A6/</guid><description>基础语法 赋值的时候等号两边没有空格 set a=%b 取值：%a 输出变量：%a% 常用命令 @REM 注释 xcopy 批量复制文件夹 实例： xcopy /e/y/i/f source destination 参数解释： /e 复制所有子目录，即使</description></item><item><title>GraphCodeBert PreTraining Code Representation With Data Flow</title><link>https://yanyulinxi.github.io/post/paperreading/graphcodebert-pretraining-code-representation-with-data-flow/</link><pubDate>Wed, 06 Apr 2022 11:19:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/graphcodebert-pretraining-code-representation-with-data-flow/</guid><description>1. 综述翻译 编程语言的预训练模型在代码搜索、代码完成、代码摘要等各种与代码相关的任务上取得了显着的经验改进。然而，现有的预训练模型将代码片段视</description></item><item><title>CodeBert a Pretrained Model for Programming and Natural Languages</title><link>https://yanyulinxi.github.io/post/paperreading/codebert-a-pretrained-model-for-programming-and-natural-languages/</link><pubDate>Wed, 06 Apr 2022 10:48:22 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/codebert-a-pretrained-model-for-programming-and-natural-languages/</guid><description>1. 综述翻译 我们展示了 CodeBERT，一种用于编程语言 (PL) 和自然语言 (NL) 的双峰预训练模型。 CodeBERT 学习支持下游 NL-PL 应用程序的通用表示，例如自然语言代码搜</description></item><item><title>OrderMatters Semantic Aware Neural Networks</title><link>https://yanyulinxi.github.io/post/paperreading/ordermatters-semantic-aware-neural-networks/</link><pubDate>Wed, 16 Mar 2022 09:22:29 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/ordermatters-semantic-aware-neural-networks/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description></item><item><title>图神经网络面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Sun, 13 Mar 2022 21:10:52 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E5%9B%BE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>GCN GraphSage GraphSAGE(Graph SAmple and aggreGatE)框架，通过训练聚合节点邻居的函数（卷积层），使GCN扩展成归纳学习任务，对未知节点起到泛化作用。 每次只计算一跳</description></item><item><title>Transformer和Bert面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/transformer%E5%92%8Cbert%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Thu, 10 Mar 2022 10:02:58 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/transformer%E5%92%8Cbert%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>Transformer 和 Bert 面试题 资料 视频资料 https://www.bilibili.com/video/BV1Di4y1c7Zm 面试资料 https://zhuanlan.zhihu.com/p/148656446 讲解 来源 机器翻译 机器翻译常用RNN模型。RNN模型的缺点 RNN模型需要一个一个送入进去，无法并行 RNN模</description></item><item><title>DBSCAN聚类算法</title><link>https://yanyulinxi.github.io/post/study/deeplearning/dbscan%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 06 Mar 2022 11:13:48 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/dbscan%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/</guid><description>DBSCAN 定义核心点，获取所有核心点 对于每一个点画一个圈，当周围圈中点的个数大于定义的值的个数，将其设置为核心点。 从随机选择的一个核心点出发，建立一</description></item><item><title>PCA,LDA降维面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/pcalda%E9%99%8D%E7%BB%B4%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Sun, 06 Mar 2022 10:04:34 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/pcalda%E9%99%8D%E7%BB%B4%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>PCA降维 PCA的理论，旨在找到数据中的主成分分析，利用这些主成分表征原始数据，从而达到降维的目的 在信号处理领域，认为信号拥有较大的方差，噪</description></item><item><title>LSTM网络</title><link>https://yanyulinxi.github.io/post/study/deeplearning/lstm%E7%BD%91%E7%BB%9C/</link><pubDate>Sat, 05 Mar 2022 21:38:47 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/lstm%E7%BD%91%E7%BB%9C/</guid><description>循环神经网络 循环神经网络每一层训练采用相同的w和b。它的求解采用BPTT（基于时间的反向传播算法实现）。当把循环神经网络展开成T层的神经网络</description></item><item><title>梯度消失爆炸理论分析</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1%E7%88%86%E7%82%B8%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90/</link><pubDate>Sat, 05 Mar 2022 20:47:34 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E6%A2%AF%E5%BA%A6%E6%B6%88%E5%A4%B1%E7%88%86%E7%82%B8%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90/</guid><description>梯度消失和爆炸 资料：https://zhuanlan.zhihu.com/p/33006526 由于链式法则和反向传播，在反向传播过程中需要对</description></item><item><title>GCN讲解和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/gcn%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Fri, 04 Mar 2022 22:08:25 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/gcn%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>GCN图卷积神经网络 基于谱的图卷积神经网络 https://www.bilibili.com/video/BV1Vw411R7Fj https://ml-researcher.github.io/file/gcn.pdf https://www.cnblogs.com/siviltaram/p/graph_neural_network_1.html 数学公式推导，讲的特别好。 卷积是什么 卷积：聚合相邻元素的信息。它相当于滤波器的作用，不同的卷</description></item><item><title>注意力机制讲解和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Fri, 04 Mar 2022 18:53:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>注意力机制 https://zhuanlan.zhihu.com/p/78655043 https://zhuanlan.zhihu.com/p/379033238 注意力机制，用于从大量信息中筛选出有用的信息，就是注意力机制。最经典的图，就是qkv的结构图。分三个步骤 Query与key送入</description></item><item><title>Lightgbm面试题相关</title><link>https://yanyulinxi.github.io/post/study/deeplearning/lightgbm%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%B8%E5%85%B3/</link><pubDate>Fri, 04 Mar 2022 11:01:50 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/lightgbm%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%B8%E5%85%B3/</guid><description>lightgbm 从 LightGBM 名字我们可以看出其是轻量级（Light）的梯度提升机（GBM），其相对 XGBoost 具有训练速度快、内存占用低的特点。 LightGBM 是为解决GBDT训练速度慢</description></item><item><title>算法竞赛知识点</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%9F%A5%E8%AF%86%E7%82%B9/</link><pubDate>Thu, 03 Mar 2022 21:37:05 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%9F%A5%E8%AF%86%E7%82%B9/</guid><description>数据初探 对数据进行分析 单变量可视化分析 多变量可视化分析 降维分析 在这个阶段需要注意的点： 数据基本情况 数据大小，字段类型 是否存在时序信息。（时序</description></item><item><title>RF随机森林面试题和讲解</title><link>https://yanyulinxi.github.io/post/study/deeplearning/rf%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E9%9D%A2%E8%AF%95%E9%A2%98%E5%92%8C%E8%AE%B2%E8%A7%A3/</link><pubDate>Thu, 03 Mar 2022 10:41:13 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/rf%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E9%9D%A2%E8%AF%95%E9%A2%98%E5%92%8C%E8%AE%B2%E8%A7%A3/</guid><description>随机森林 Random Forest 一种基于树模型的Bagging的优化版本，一棵树的生成肯定还是不如多棵树，因此就有了随机森林，解决决策树泛化能力弱的特点。 描述：</description></item><item><title>写在面试字节被拒</title><link>https://yanyulinxi.github.io/post/essay/thought/%E5%86%99%E5%9C%A8%E9%9D%A2%E8%AF%95%E5%AD%97%E8%8A%82%E8%A2%AB%E6%8B%92/</link><pubDate>Wed, 02 Mar 2022 14:37:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/essay/thought/%E5%86%99%E5%9C%A8%E9%9D%A2%E8%AF%95%E5%AD%97%E8%8A%82%E8%A2%AB%E6%8B%92/</guid><description>写在面试字节被拒的中午 中午收到了字节的感谢信，告诉我面试没有通过。 虽说是感谢信，本该带着愉快的心情接收，可带来的确实让人难过的消息。就这样，</description></item><item><title>Word2vec讲解和面经</title><link>https://yanyulinxi.github.io/post/study/deeplearning/word2vec%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E7%BB%8F/</link><pubDate>Sat, 26 Feb 2022 16:10:37 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/word2vec%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E7%BB%8F/</guid><description>word2vec 简介 讲的非常好：https://zhuanlan.zhihu.com/p/27234078 负采样：https://www.cnblogs.</description></item><item><title>光谷店铺点评</title><link>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E5%85%89%E8%B0%B7%E5%BA%97%E9%93%BA%E7%82%B9%E8%AF%84/</link><pubDate>Wed, 23 Feb 2022 09:39:49 +0800</pubDate><guid>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E5%85%89%E8%B0%B7%E5%BA%97%E9%93%BA%E7%82%B9%E8%AF%84/</guid><description/></item><item><title>东西湖店铺点评</title><link>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E4%B8%9C%E8%A5%BF%E6%B9%96%E5%BA%97%E9%93%BA%E7%82%B9%E8%AF%84/</link><pubDate>Wed, 23 Feb 2022 09:39:37 +0800</pubDate><guid>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E4%B8%9C%E8%A5%BF%E6%B9%96%E5%BA%97%E9%93%BA%E7%82%B9%E8%AF%84/</guid><description/></item><item><title>百弗卡美食点评</title><link>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E7%99%BE%E5%BC%97%E5%8D%A1%E7%BE%8E%E9%A3%9F%E7%82%B9%E8%AF%84/</link><pubDate>Wed, 23 Feb 2022 09:25:11 +0800</pubDate><guid>https://yanyulinxi.github.io/post/journey/%E7%BE%8E%E9%A3%9F%E8%AF%84%E5%88%86/%E7%99%BE%E5%BC%97%E5%8D%A1%E7%BE%8E%E9%A3%9F%E7%82%B9%E8%AF%84/</guid><description>1-5分 1分这啥啊 2分低于预期 3分一般 4分喜欢吃 5分很喜欢吃 1分白送也不吃 2分白送就吃 3分没事不买 4分会再买 5分会推荐给朋友 司康（红茶，蔓越</description></item><item><title>模型调优和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E6%A8%A1%E5%9E%8B%E8%B0%83%E4%BC%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Sun, 20 Feb 2022 16:21:59 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E6%A8%A1%E5%9E%8B%E8%B0%83%E4%BC%98%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description/></item><item><title>指标讲解和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/metrics%E6%8C%87%E6%A0%87%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Sun, 20 Feb 2022 15:20:36 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/metrics%E6%8C%87%E6%A0%87%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>指标讲解和面试题 指标 TP, FP, TN, FN tp = 预测为正，实际为正 fp = 预测为正，实际为负 fn = 预测为负，实际为正 tn = 预测为负，实际为负 后一个字母代表预测，前一</description></item><item><title>决策树讲解和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E5%86%B3%E7%AD%96%E6%A0%91%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Sun, 20 Feb 2022 09:57:58 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E5%86%B3%E7%AD%96%E6%A0%91%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>决策树 决策树算法采用树形结构，使用层层推理来实现最终的分类。决策树由下面几种元素构成： 根节点：包含样本的全集 内部节点：对应特征属性测试 叶节点</description></item><item><title>XGBoost理论推导和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/xgboost%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Thu, 17 Feb 2022 16:33:05 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/xgboost%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>停止增长的条件： 叶子节点的分裂gain&amp;lt;=0 叶子节点只有一个样本的时候，就没必要划分了。 限制叶子节点个数 计算出叶子节点的b_j。计算完</description></item><item><title>GBDT理论推导和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/gbdt%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Thu, 17 Feb 2022 10:59:58 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/gbdt%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>加法模型 加法模型事梯度提升树、Adaboost的基础模型 公式: $f(x) = \sum_{m=1}^M \beta_m b(x;\gamma_m) $ 其中$\beta_m$是分类器的权重，$\gamma_m$是分类器</description></item><item><title>Adaboost理论推导和面试题</title><link>https://yanyulinxi.github.io/post/study/deeplearning/adaboost%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Thu, 17 Feb 2022 09:49:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/adaboost%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>集成学习 集成学习通过叠加弱分类器，来训练得到一个强分类器。 根据叠加的方式不同，可以分为Bagging, Boosting, Stacking. Bagging: 多次采样，并行训练，集体投票，减</description></item><item><title>自暴自弃</title><link>https://yanyulinxi.github.io/post/essay/thought/%E8%87%AA%E6%9A%B4%E8%87%AA%E5%BC%83/</link><pubDate>Wed, 16 Feb 2022 21:11:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/essay/thought/%E8%87%AA%E6%9A%B4%E8%87%AA%E5%BC%83/</guid><description>自暴自弃 2022-2-16 独处随写 今天有一点感悟。加上看了个视频。遂来写下这段话。主题是自暴自弃。 我是个容易自暴自弃的人。每当任务过多觉得无法完成，或者压力</description></item><item><title>DeepReflect</title><link>https://yanyulinxi.github.io/post/paperreading/deepreflect/</link><pubDate>Mon, 14 Feb 2022 21:09:03 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/deepreflect/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 特征 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于</description></item><item><title>Person Reidentification via Multi Feature Fusion With Adaptive Graph Learning</title><link>https://yanyulinxi.github.io/post/paperreading/person-reidentification-via-multi-feature-fusion-with-adaptive-graph-learning/</link><pubDate>Sun, 06 Feb 2022 15:03:08 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/person-reidentification-via-multi-feature-fusion-with-adaptive-graph-learning/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 详细 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于</description></item><item><title>IntellijIDEA技巧</title><link>https://yanyulinxi.github.io/post/study/java/intellijidea%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 10 Jan 2022 19:19:19 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/intellijidea%E6%8A%80%E5%B7%A7/</guid><description>快捷键： 一个函数调用完了后，输入.var可以快速将其赋值。 Scala可以输入.val快速赋值。 快捷键 ctrl H 搜索。</description></item><item><title>JavaParser学习</title><link>https://yanyulinxi.github.io/post/study/java/javaparser%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 10 Jan 2022 09:45:33 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/javaparser%E5%AD%A6%E4%B9%A0/</guid><description>Pretty Printing是用来将AST打印成代码的。 NodeText和具体的语法模型 Void foo (int a ){} Type child: void Name child: foo param child: int a body child: {} TreeVisitor。使</description></item><item><title>Electron学习</title><link>https://yanyulinxi.github.io/post/study/ui/electron%E5%AD%A6%E4%B9%A0/</link><pubDate>Sun, 09 Jan 2022 22:45:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/ui/electron%E5%AD%A6%E4%B9%A0/</guid><description>electron打包程序 https://segmentfault.com/a/1190000013924153 electron简单入门</description></item><item><title>其他有用有趣的软件记录</title><link>https://yanyulinxi.github.io/post/study/pcsoftware/%E5%85%B6%E4%BB%96%E6%9C%89%E7%94%A8%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 07 Jan 2022 15:51:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/pcsoftware/%E5%85%B6%E4%BB%96%E6%9C%89%E7%94%A8%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</guid><description>Balsamiq 画图软件。</description></item><item><title>Scala学习</title><link>https://yanyulinxi.github.io/post/study/java/scala%E5%AD%A6%E4%B9%A0/</link><pubDate>Thu, 06 Jan 2022 11:37:01 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/scala%E5%AD%A6%E4%B9%A0/</guid><description>scala学习网站 https://www.w3cschool.cn/scala/scala-index.html 专为spark学习：https://www.bilibili.com/video/BV1oJ411m7z3?p=11 基础</description></item><item><title>Java重拾</title><link>https://yanyulinxi.github.io/post/study/java/java%E9%87%8D%E6%8B%BE/</link><pubDate>Wed, 05 Jan 2022 15:49:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/java%E9%87%8D%E6%8B%BE/</guid><description>基本数据类型： 小数默认double。float数值需要额外添加字母f 长整型245L 理解： 申明，基本类型申明的是变量，是深度拷贝，类申明的是引</description></item><item><title>Spark学习计划</title><link>https://yanyulinxi.github.io/post/study/spark/spark%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</link><pubDate>Tue, 04 Jan 2022 09:43:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/spark/spark%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</guid><description>spark学习计划：https://zhuanlan.zhihu.com/p/384903354 Scala学习《Scala实用指南》 然后书籍</description></item><item><title>为什么要努力</title><link>https://yanyulinxi.github.io/post/essay/thought/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%AA%E5%8A%9B/</link><pubDate>Tue, 28 Dec 2021 19:21:00 +0800</pubDate><guid>https://yanyulinxi.github.io/post/essay/thought/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%AA%E5%8A%9B/</guid><description>看看那些为考研拼搏的人吧，哪个不是拼劲全力？哪个不是竭尽全力？ 为什么要努力，想想那些考研的日子的拼搏付出，不忍心辜负努力的自己。</description></item><item><title>Boost复习</title><link>https://yanyulinxi.github.io/post/study/deeplearning/xueguo%E5%AD%A6%E8%BF%87%E7%9F%A5%E8%AF%86%E7%9A%84%E5%A4%8D%E4%B9%A0/</link><pubDate>Sun, 26 Dec 2021 10:30:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/xueguo%E5%AD%A6%E8%BF%87%E7%9F%A5%E8%AF%86%E7%9A%84%E5%A4%8D%E4%B9%A0/</guid><description>Boost boost是一种加法模型，通过串联的叠加多个弱学习器，每个学习器来学习上一个学习器的偏差，来得到一个强学习器。 boost和bagging的</description></item><item><title>Kmeans</title><link>https://yanyulinxi.github.io/post/study/deeplearning/kmeans/</link><pubDate>Sat, 11 Dec 2021 17:08:12 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/kmeans/</guid><description>聚类算法（clustering Algorithms）介绍 聚类是一种无监督学习—对大量未知标注的数据集，按数据的内在相似性将数据集划分为多个类</description></item><item><title>KnnK最近邻居</title><link>https://yanyulinxi.github.io/post/study/deeplearning/knnk%E6%9C%80%E8%BF%91%E9%82%BB%E5%B1%85/</link><pubDate>Sat, 11 Dec 2021 15:49:11 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/knnk%E6%9C%80%E8%BF%91%E9%82%BB%E5%B1%85/</guid><description>KNN步骤。 一般来说，KNN分类算法的计算过程： 1）计算待分类点与已知类别的点之间的距离 2）按照距离递增次序排序 3）选取与待分类点距离最小的</description></item><item><title>逻辑回归lr</title><link>https://yanyulinxi.github.io/post/study/deeplearning/lr%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</link><pubDate>Sat, 11 Dec 2021 15:47:19 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/lr%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</guid><description>逻辑回归 个人理解 y = f(wx+b) f 为 sigmoid激活函数 $1/(1+e^{-z})$ 公式推导: https://zhuanlan.zhihu.com/p/44591359 https://zhuanlan.zhihu.com/p/46928319 极大似然估计 概率 在知道分布规律和具体参数的情况下，可以计算出某个事件发生的概</description></item><item><title>百面机器学习baimian</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%99%BE%E9%9D%A2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0baimian/</link><pubDate>Mon, 06 Dec 2021 20:25:47 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%99%BE%E9%9D%A2%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0baimian/</guid><description>为了实习而计划的学习顺序 特征工程 模型评估部分 经典算法部分 非监督学习部分 优化算法部分 采样部分 前向神经网络部分 循环神经网络部分 集成学习部分 注重工</description></item><item><title>Matrix矩阵补全</title><link>https://yanyulinxi.github.io/post/study/deeplearning/matrix%E7%9F%A9%E9%98%B5%E8%A1%A5%E5%85%A8/</link><pubDate>Sat, 04 Dec 2021 21:09:47 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/matrix%E7%9F%A9%E9%98%B5%E8%A1%A5%E5%85%A8/</guid><description>默认矩阵式低秩的。</description></item><item><title>SVM讲解</title><link>https://yanyulinxi.github.io/post/study/deeplearning/svm%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Fri, 03 Dec 2021 19:08:27 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/svm%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>SVM https://www.bilibili.com/video/BV1Y7411P7nd 讲的非常好。 概念: 超平面（最优分割面）能使支持向量和分割线最小距离最大的平面。 点到直线距离=$\frac{Ax+By+b}{\sqrt{</description></item><item><title>图结构特征的使用</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E5%9B%BE%E7%BB%93%E6%9E%84%E7%89%B9%E5%BE%81%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 27 Nov 2021 09:07:30 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E5%9B%BE%E7%BB%93%E6%9E%84%E7%89%B9%E5%BE%81%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>图特征提取出来之后怎么使用 从神经网络的角度上，图神经网络怎么使用的： 图：邻接矩阵、结点（结点属性）。 使用图神经网络 图结构特征和图神经网络是天</description></item><item><title>TitanicSolutionGold1</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/%E7%89%B9%E5%BE%81%E5%88%86%E6%9E%90feature/titanicsolutiongold1/</link><pubDate>Wed, 24 Nov 2021 09:57:10 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/%E7%89%B9%E5%BE%81%E5%88%86%E6%9E%90feature/titanicsolutiongold1/</guid><description>解决思路流程： 工作流程阶段 竞赛解决方案工作流程经历了数据科学解决方案书中描述的七个阶段。 问题或问题定义。 获取训练和测试数据。 整理、准备、清理</description></item><item><title>Pandas学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 09:40:51 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>资料 https://github.com/datawhalechina/joyful-pandas pandas 临时杂碎知识点记录 .null()检测是否有空值 .sum()对pandas数值进行求和 .unique()检测pandas中的独一值。 t</description></item><item><title>-其他推荐书籍资料</title><link>https://yanyulinxi.github.io/post/study/deeplearning/-%E5%85%B6%E4%BB%96%E6%89%80%E6%9C%89%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB%E7%9A%84%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/</link><pubDate>Mon, 22 Nov 2021 21:00:56 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/-%E5%85%B6%E4%BB%96%E6%89%80%E6%9C%89%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB%E7%9A%84%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%96%99/</guid><description>待读博客 代码补全漫谈： https://www.twblogs.net/a/5d7e6695bd9eee541c346d43 网站 最全资料 https://github.com/Mikoto10032/DeepLearning 书籍 周志华 机器学习 深度学习 deep learning 李航 统计学方法 机器学习实战 how to lie with statistics 视频 吴恩达机器学习 吴恩达深度学习。 N</description></item><item><title>Batchnorm讲解</title><link>https://yanyulinxi.github.io/post/study/deeplearning/batchnorm%E8%AE%B2%E8%A7%A3/</link><pubDate>Mon, 22 Nov 2021 20:25:16 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/batchnorm%E8%AE%B2%E8%A7%A3/</guid><description>引用 https://mp.weixin.qq.com/s/QFpolIXvOQjUsPAngqvqmg 论文： Correct Normalization Matters: Understanding the Effect of Normalization On Deep Neural Network Models For Click-Through Rate Prediction：https://arxiv.org/pdf/2006.12753.pdf 介</description></item><item><title>SimCLR a Simple Framework for Contrastive Learning of Visual Representations</title><link>https://yanyulinxi.github.io/post/paperreading/simclr-a-simple-framework-for-contrastive-learning-of-visual-representations/</link><pubDate>Thu, 18 Nov 2021 16:57:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/simclr-a-simple-framework-for-contrastive-learning-of-visual-representations/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description></item><item><title>Bagging和Boosting,adboost,xgboost</title><link>https://yanyulinxi.github.io/post/study/deeplearning/bagging%E5%92%8Cboostingadaboostxgboost/</link><pubDate>Wed, 17 Nov 2021 16:23:09 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/bagging%E5%92%8Cboostingadaboostxgboost/</guid><description>https://cloud.tencent.com/developer/news/393218 Bagging和Boosting都是将已有的分类或回归算法通过一定方式组合起来，形成一个性能更加强大的分类器，更准确的说这是一种分类算法的</description></item><item><title>随即森林和决策树</title><link>https://yanyulinxi.github.io/post/study/deeplearning/jcs%E9%9A%8F%E5%8D%B3%E6%A3%AE%E6%9E%97%E5%92%8C%E5%86%B3%E7%AD%96%E6%A0%91/</link><pubDate>Wed, 17 Nov 2021 16:10:22 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/jcs%E9%9A%8F%E5%8D%B3%E6%A3%AE%E6%9E%97%E5%92%8C%E5%86%B3%E7%AD%96%E6%A0%91/</guid><description>https://easyai.tech/ai-definition/decision-tree/ https://zhuanlan.zhihu.com/p/85731206 决策树更详细点。 https://blog.csdn.net/zjsghww/article/details/51638126 c4.5 什么是决策树？ 决策树算法采用树形结构，使用层层推理来实现最终的分类。决策树由下面几种元素构成： 根节点：包含样本的全集</description></item><item><title>比赛学习网址或工具</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%AF%94%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80%E6%88%96%E5%B7%A5%E5%85%B7/</link><pubDate>Wed, 17 Nov 2021 11:12:49 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%AF%94%E8%B5%9B%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80%E6%88%96%E5%B7%A5%E5%85%B7/</guid><description>怎么学习？ Kaggle怎么学？比赛驱动。技术驱动。 我们按照这样的路径： 三方面驱动。 比赛驱动。 然后记录比赛中的相关技术，去学习相关技术。 并学习</description></item><item><title>_NLP案例目录</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/nlp%E7%9B%B8%E5%85%B3%E6%AF%94%E8%B5%9B/_nlp%E6%A1%88%E4%BE%8B%E7%9B%AE%E5%BD%95/</link><pubDate>Wed, 17 Nov 2021 11:09:36 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/nlp%E7%9B%B8%E5%85%B3%E6%AF%94%E8%B5%9B/_nlp%E6%A1%88%E4%BE%8B%E7%9B%AE%E5%BD%95/</guid><description>NLP比赛目录 https://github.com/zhpmatrix/nlp-competitions-list-review 适合初学者学习的NLP开源项目有哪些？ - 武博文的回答 - 知乎 https://www.zhihu.com/question/264352009/answer/386628568</description></item><item><title>NLP总结1</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/nlp%E7%9B%B8%E5%85%B3%E6%AF%94%E8%B5%9B/nlp%E6%80%BB%E7%BB%931/</link><pubDate>Wed, 17 Nov 2021 10:30:18 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/nlp%E7%9B%B8%E5%85%B3%E6%AF%94%E8%B5%9B/nlp%E6%80%BB%E7%BB%931/</guid><description>新手入门 Kaggle NLP类比赛总结 - jiazhuamh的文章 - 知乎 https://zhuanlan.zhihu.com/p/109992475</description></item><item><title>Shap学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 14 Nov 2021 17:08:21 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>api 随笔记 shap.force_plot这个函数应该是打印对于这个样本，哪些权重做出了贡献。</description></item><item><title>4 机器学习基础</title><link>https://yanyulinxi.github.io/post/study/deeplearning/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 12 Nov 2021 09:06:45 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/4-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</guid><description>深度学习是机器学习的一个特定分支。我们要想充分理解深度学习，必须对机器 学习的基本原理有深刻的理解。 机器学习本质上属于应用统计学，更多地关注于</description></item><item><title>3 数值统计</title><link>https://yanyulinxi.github.io/post/study/deeplearning/3-%E6%95%B0%E5%80%BC%E7%BB%9F%E8%AE%A1/</link><pubDate>Tue, 09 Nov 2021 08:37:32 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/3-%E6%95%B0%E5%80%BC%E7%BB%9F%E8%AE%A1/</guid><description>机器学习算法通常需要大量的数值计算。这通常是指通过迭代过程更新解的估 计值来解决数学问题的算法，而不是通过解析过程推导出公式来提供正确解的方法</description></item><item><title>Mysql_21mins_tutorial</title><link>https://yanyulinxi.github.io/post/study/server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/mysql/mysql_21mins_tutorial/</link><pubDate>Mon, 08 Nov 2021 15:54:52 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/mysql/mysql_21mins_tutorial/</guid><description>快速入门 MySQL 为关系型数据库(Relational Database Management System)，一个关系型数据库由一个或数个表格组成 表头(header): 每一列的名称; 列</description></item><item><title>西安攻略</title><link>https://yanyulinxi.github.io/post/journey/%E8%A5%BF%E5%AE%89/%E8%A5%BF%E5%AE%89%E6%94%BB%E7%95%A51/</link><pubDate>Mon, 08 Nov 2021 15:52:44 +0800</pubDate><guid>https://yanyulinxi.github.io/post/journey/%E8%A5%BF%E5%AE%89/%E8%A5%BF%E5%AE%89%E6%94%BB%E7%95%A51/</guid><description>建议看原文，然后进行总结。 作者：美途旅行 链接：https://zhuanlan.zhihu.com/p/367113622 来源：知乎 著作权归</description></item><item><title>案例目录</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/_%E6%A1%88%E4%BE%8B%E7%9B%AE%E5%BD%95/</link><pubDate>Mon, 08 Nov 2021 14:42:49 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/_%E6%A1%88%E4%BE%8B%E7%9B%AE%E5%BD%95/</guid><description>科大讯飞 X光检测 https://mp.weixin.qq.com/s/H0NMXOAj6A7jpdpyFsKt_A 水下目标检测 https://mp.weixin.qq.com/s?__biz=MzUxNjcxMjQxNg==&amp;amp;mid=2247498164&amp;amp;idx=3&amp;amp;sn=918d151c748c123e27812ef8ece23bb6&amp;amp;chksm=f9a18b3bced6022d9a7a0c1b9164acfebea33c437656dee662bc6fbb447cd7f902e5976e5c72&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=&amp;amp;sharer_sharetime=1587119860977&amp;amp;sharer_shareid=42a896371dfe6ebe8cc4cd474d9b747c&amp;amp;exportkey=AfuYjLAdEIfOR%2FIuYRD8dpM%3D&amp;amp;pass_ticket=781k4y6q5ReAogsulOWaRaDoMxACZW%2F%2FDMiqguAJb7T0aup7%2BNgkdVxCQ9fTKGHF#rd 详细思路介绍kaggle https://zhuanlan.zhihu.com/p/25742261 Transformer 典型应用 https://mp.weixin.qq.com/s/KFVN9PmYMMvV60aM1_QQzw ATEC比赛 这两个比赛writeup https://www.zhihu.com/search?q=atec&amp;amp;type=content https://mp.weixin.qq.com/s/F9GLj7NtnXLBWTVdpXlTAQ https://github.com/minghaochen/ATEC2021-Track1/blob/master/train.py 代码</description></item><item><title>科大讯飞 X光检测</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9E-x%E5%85%89%E6%A3%80%E6%B5%8B/</link><pubDate>Mon, 08 Nov 2021 11:03:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9E-x%E5%85%89%E6%A3%80%E6%B5%8B/</guid><description>本篇地址 https://mp.weixin.qq.com/s/H0NMXOAj6A7jpdpyFsKt_A 一、赛题背景 X光安检机是目前我国使用最广泛的安检技术手段，广泛应用于城市轨交、铁路、机场、重点场馆、物流寄递等场景。使用人工智能技</description></item><item><title>2 概率与信息论</title><link>https://yanyulinxi.github.io/post/study/deeplearning/2-%E6%A6%82%E7%8E%87%E4%B8%8E%E4%BF%A1%E6%81%AF%E8%AE%BA/</link><pubDate>Mon, 08 Nov 2021 09:39:21 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/2-%E6%A6%82%E7%8E%87%E4%B8%8E%E4%BF%A1%E6%81%AF%E8%AE%BA/</guid><description>概率论意义 随机变量 概率分布 边缘概率 条件概率 条件概率的链式法则 独立性和条件独立性 期望、方差、协方差 常用概率分布 常用函数的有用性质 贝叶斯规则 连续</description></item><item><title>Kaggle记录总结</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93%E5%92%8C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link><pubDate>Fri, 05 Nov 2021 09:22:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%80%9D%E8%B7%AF%E6%80%BB%E7%BB%93%E5%92%8C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid><description>学习路线 kaggle要怎么学？ kaggle相关技术。当空闲时确定一个kaggle技术进行学习 kaggle比赛总结。 kaggle比赛尝试。 ka</description></item><item><title>Kaggle祖传代码</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E7%A5%96%E4%BC%A0%E4%BB%A3%E7%A0%81/</link><pubDate>Fri, 05 Nov 2021 09:02:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E7%A5%96%E4%BC%A0%E4%BB%A3%E7%A0%81/</guid><description>这里给出祖传代码list 使用高斯归一化 使用贝叶斯搜寻参数 常用的utils。包括归一化函数、pytorch训练等。 使用bert进行masked</description></item><item><title>Kaggle前人经验</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E5%89%8D%E4%BA%BA%E7%BB%8F%E9%AA%8C/</link><pubDate>Mon, 01 Nov 2021 20:10:31 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E5%89%8D%E4%BA%BA%E7%BB%8F%E9%AA%8C/</guid><description>大佬经验总结 一位master： 网址:https://mp.weixin.qq.com/s?__biz=Mzk0NDE5Nzg1Ng==&amp;am</description></item><item><title>Gensim学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 22 Oct 2021 10:29:55 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>使用腾讯中文语料库 腾讯词向量使用方法： https://www.jianshu.com/p/65a29663130a 语料库地址： https://ai.tencent.com/ailab/nlp/zh/embedding.html 语料库 chinese-word-vectors: https://github.com/Embedding/Chinese-Word-Vectors 300维 腾讯词向量： https://www.jianshu.com/p/65a29663130a 200维，800万词。 其他多语言语料库 https://sites.google.com/site/rmyeid/projects/polyglot 使用gensi</description></item><item><title>ATEC科技精英赛</title><link>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/atec%E7%A7%91%E6%8A%80%E7%B2%BE%E8%8B%B1%E8%B5%9B/</link><pubDate>Wed, 20 Oct 2021 15:25:35 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/kaggle/kaggle%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/atec%E7%A7%91%E6%8A%80%E7%B2%BE%E8%8B%B1%E8%B5%9B/</guid><description>结束复盘 2021 ATEC科技精英赛（网络欺诈举报定性）比赛分享 - 机器学习小谈的文章 - 知乎 https://zhuanlan.zhihu.com/p/434432485 https://jishuin.proginn.com/p/763bfbd6d31e 比赛题目 第一道题： 赛题从当前社会中高发的电信网络欺诈识</description></item><item><title>Leetcode3_hash表</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode3_hash%E8%A1%A8/</link><pubDate>Wed, 20 Oct 2021 15:03:30 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode3_hash%E8%A1%A8/</guid><description>基础知识 hash将通过hash函数将某个东西转为数值，然后存在哈希表上。这个哈希表可能是数组，也可能是红黑树等等。 如果hashCode的数值</description></item><item><title>视频剪辑计划</title><link>https://yanyulinxi.github.io/post/study/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E8%AE%A1%E5%88%92/</link><pubDate>Tue, 19 Oct 2021 09:37:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E8%AE%A1%E5%88%92/</guid><description>视频剪辑计划 泰坦陨落2 视频剪辑音乐</description></item><item><title>0 引言</title><link>https://yanyulinxi.github.io/post/study/deeplearning/0-%E5%BC%95%E8%A8%80%E5%92%8C%E7%AC%A6%E5%8F%B7%E8%A1%A8/</link><pubDate>Tue, 19 Oct 2021 08:17:36 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/0-%E5%BC%95%E8%A8%80%E5%92%8C%E7%AC%A6%E5%8F%B7%E8%A1%A8/</guid><description>引言 计算机可以处理形式化的语言。人工智能的一大难题就是将如何将非形式化的传达给计算机。 人工智能AI系统需要具备自己获取知识的能力，即从原始数</description></item><item><title>线性代数</title><link>https://yanyulinxi.github.io/post/study/deeplearning/1-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</link><pubDate>Tue, 19 Oct 2021 08:03:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/1-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</guid><description>常见概念 特征分解 奇异值分解 常见概念 标量 向量 矩阵 张量 矩阵加法：C = A + b。表示向量b和矩阵的每一行相加。这种隐式复制的方式，称为广播。boar</description></item><item><title>源代码恶意代码识别</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E6%BA%90%E4%BB%A3%E7%A0%81%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E8%AF%86%E5%88%AB/</link><pubDate>Fri, 15 Oct 2021 09:17:12 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E6%BA%90%E4%BB%A3%E7%A0%81%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E8%AF%86%E5%88%AB/</guid><description>现有方案 仅有的一个针对开源代码恶意代码的检测。提供了一个巨大的开源库，但是其是通过检测github库的字段、md文件等信息。 开源代码 恶意代码</description></item><item><title>SourceFinder Finding Malware Source Code From Publiclyu Available Repositories in Github</title><link>https://yanyulinxi.github.io/post/paperreading/sourcefinder-finding-malware-source-code-from-publiclyu-available-repositories-in-github/</link><pubDate>Fri, 15 Oct 2021 08:28:59 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/sourcefinder-finding-malware-source-code-from-publiclyu-available-repositories-in-github/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description></item><item><title>Python命名规范</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link><pubDate>Tue, 12 Oct 2021 10:37:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid><description>从大到小 从大到小 命名规范 样例 包名 全小写 sklearn 模块名 全小写，下划线分割 sklearn.model_selection 类名 首字母大写、驼峰(类名不加下划线) ThisIsMyClass, TruncatedSVD 函数名 全小写、用下划线增加可读性</description></item><item><title>神经网络杂碎知识点记录</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%9D%82%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95lingsui/</link><pubDate>Sun, 10 Oct 2021 16:30:13 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%9D%82%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95lingsui/</guid><description>标准化和归一化 缩放到均值为0，方差为1（Standardization——StandardScaler()） 缩放到0和1之间（Standar</description></item><item><title>PyOD学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 09 Oct 2021 15:51:08 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>注意 里面有很多需要其他库的神经网络。比如keras。比如tensorflow。为了避免最后太过复杂，这些自己写最好。 样例 生成污染数据 contamination = 0.1 #</description></item><item><title>Leetcode2_链表</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode2_%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 09 Oct 2021 15:12:27 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode2_%E9%93%BE%E8%A1%A8/</guid><description>203 移除链表元素 头节点是什么呢。头节点就是一个空的节点但指向第一个节点。保证了在处理其他节点的时候保持操作一致。返回的时候返回头节点的下一个节</description></item><item><title>Progress in Outlier Detection Techniques a Survey</title><link>https://yanyulinxi.github.io/post/paperreading/progress-in-outlier-detection-techniques-a-survey/</link><pubDate>Thu, 07 Oct 2021 16:20:04 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/progress-in-outlier-detection-techniques-a-survey/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 基于密度的方法 基于统计的方法 基于参数的 GAUSSIAN MIXTURE MODEL METHODS REGRESSION METHODS 非参数方法 其他统计方法 优缺点 基于距离的方法 基于</description></item><item><title>Seaborn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 30 Sep 2021 08:51:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>seaborn结合pandas来画好看的图。 最后网页显示的统计图，可以用seaborn画。 基本使用 seaborn中两种函数，第一种返回当前设</description></item><item><title>常用其他python库</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</link><pubDate>Thu, 30 Sep 2021 08:41:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</guid><description>常用库 yellowbrick 用来可视化画图的。 seaborn高端matplotlib画图的。 prettyplotlib 配合seaborn来画漂亮的图。 plotly Express 可视化。 tqdm进度条。 lin</description></item><item><title>Outlier异常值检测技术记录</title><link>https://yanyulinxi.github.io/post/study/deeplearning/outlier%E5%BC%82%E5%B8%B8%E5%80%BC%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/</link><pubDate>Wed, 29 Sep 2021 20:06:48 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/outlier%E5%BC%82%E5%B8%B8%E5%80%BC%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/</guid><description>Tag: 异常值检测; 离群值检测; Outlier; 低维特征 Numeric Outlier Z-score 基于高斯分布（正态分布）外的值标记为异常 https://mp.weixin.qq.com/s?__biz=MzIzODExMDE5MA==&amp;amp;mid=2694182460&amp;amp;idx=1&amp;amp;sn=a4842775394946bb643006e2e7c67be9#rd 多维高斯特征离群点检测 使用 Mahalanobis 距离检测多元离群点 使用 $x^2$ 统计</description></item><item><title>Matplotlib-2学习</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 10:20:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 setting 不同风格 plt.style.available 打印样式列表 plt.style.use(&amp;lsquo;seaborn&amp;rsquo;) 使用seaborn风格的图。 参数color可选项： b:blue c:cyan g:green k:black m:magenta r:red w:white y:yellow 结束时 plt.legend() 在图上放置图例。 设置坐标轴 plt.xlim(-1, 3.5) #设置</description></item><item><title>Numpy学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 08:31:57 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>API 创建数组 numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0) np.linspace(2.0, 3.0, num=5) output =&amp;gt; array([2. , 2.25, 2.5 , 2.75, 3. ]) np.random random.rand(d0, d1, &amp;hellip;, dn) d为size np.random.randn(d0, d1, &amp;hellip;, dn) Return a sample (or samples) from the “standard normal” distribution. random.randint(low, high=None, size=None, dtype=int) np.random.randint([1, 5,</description></item><item><title>Scikit Learn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 28 Sep 2021 20:18:10 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 整体框架 unsupervised unsupervised methods cluster API validation API metrics models embedding Cluster Overview Unsupervised dimensionality reduction PCA Random projections johnson_lindenstrauss_min_dim GaussianRandomProjection SparseRandomProjection Feature agglomeration 概览 整体框架 # set numpy seed. when it comes to random functions, please leave a function to set seed. # load data x, y = sklearn.data # train test data split. # create model entity model =</description></item><item><title>Analyzing Data Granularity Levels for Insider Threat Detection Using Machine Learning</title><link>https://yanyulinxi.github.io/post/paperreading/analyzing-data-granularity-levels-for-insider-threat-detection-using-machine-learning/</link><pubDate>Tue, 28 Sep 2021 09:24:22 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/analyzing-data-granularity-levels-for-insider-threat-detection-using-machine-learning/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 Overview Data Collection and Pre-processing ML for Data Analytics 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是</description></item><item><title>无监督聚类算法学习总结</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E6%97%A0%E7%9B%91%E7%9D%A3%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 27 Sep 2021 15:28:41 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E6%97%A0%E7%9B%91%E7%9D%A3%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid><description>目录： 概览 1. 基于规则 1.1. 随机森林 1.2. SVM 1.3. 投影寻踪 2. 基于神经网络 2.1. AutoEncoder 3. 其他 3.1. 关联分析 4. 其他知识 回归问题 概览 https://scikit-learn.org/stable/modules/clustering.html 中文： https://sklearn.apachecn.org/docs/master/22.html#k-means 1. 基于规则 1.1. 随机森林 众多树。每</description></item><item><title>Insider Threat Detection via Hierarchical Neural Temporal Point Process</title><link>https://yanyulinxi.github.io/post/paperreading/insider-threat-detection-via-hierarchical-neural-temporal-point-process/</link><pubDate>Sun, 26 Sep 2021 10:42:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/insider-threat-detection-via-hierarchical-neural-temporal-point-process/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description></item><item><title>Log2Vec a Heterogeneous Graph Embedding Based Approach for Detecting Cyber Threats Within Enterprise</title><link>https://yanyulinxi.github.io/post/paperreading/log2vec-a-heterogeneous-graph-embedding-based-approach-for-detecting-cyber-threats-within-enterprise/</link><pubDate>Sat, 25 Sep 2021 14:45:30 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/log2vec-a-heterogeneous-graph-embedding-based-approach-for-detecting-cyber-threats-within-enterprise/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 概览 Graph Construction 关系详细定义 Graph Embedding Detection k-means簇聚类算法简单讲解： log2Vec 的聚类算法 random walk 5. 解决了什么问题（贡</description></item><item><title>An Insider Threat Detection Approach Based on Mouse Dynamics and Deep Learning</title><link>https://yanyulinxi.github.io/post/paperreading/an-insider-threat-detection-approach-based-on-mouse-dynamics-and-deep-learning/</link><pubDate>Sat, 25 Sep 2021 10:30:25 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/an-insider-threat-detection-approach-based-on-mouse-dynamics-and-deep-learning/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专</description></item><item><title>Deep Learning for Unsupervised Insider Threat Detection in Structured Cybersecurity DataStreams</title><link>https://yanyulinxi.github.io/post/paperreading/deep-learning-for-unsupervised-insider-threat-detection-in-structured-cybersecurity-datastreams/</link><pubDate>Fri, 24 Sep 2021 19:33:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/deep-learning-for-unsupervised-insider-threat-detection-in-structured-cybersecurity-datastreams/</guid><description>目录： 1. 综述翻译 1.1 发表于 2. Tag 3. 任务描述 4. 方法 概述 细节 Feature Extraction Structured Stream Neural Network DNN RNN 输出 内部危害检测： 6. 实验结果 5. 解决了什么问题（贡献） 7. 如何想到该方法 8. 我</description></item><item><title>Anomaly Based Insider Threat Detection Using Deep Autoencoders</title><link>https://yanyulinxi.github.io/post/paperreading/anomaly-based-insider-threat-detection-using-deep-autoencoders/</link><pubDate>Thu, 16 Sep 2021 20:21:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/anomaly-based-insider-threat-detection-using-deep-autoencoders/</guid><description>目录： 1. 综述翻译 1.1 发表 2. Tag 3. 任务描述 4. 方法 概览 特征提取： 自编码器 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点</description></item><item><title>Deep Learning for Insider Threat Detection Review Challenges and Opportunities</title><link>https://yanyulinxi.github.io/post/paperreading/deep-learning-for-insider-threat-detection-review-challenges-and-opportunities/</link><pubDate>Thu, 16 Sep 2021 18:47:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/deep-learning-for-insider-threat-detection-review-challenges-and-opportunities/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 Deep Feedforward Neural Network RecurrentNeuralNetwork. Convolutional Neural Network GraphNeuralNetwork. Challenges 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10.</description></item><item><title>DEMIDS a Misuse Detection System for Database Systems</title><link>https://yanyulinxi.github.io/post/paperreading/demids-a-misuse-detection-system-for-database-systems/</link><pubDate>Thu, 16 Sep 2021 15:38:15 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/demids-a-misuse-detection-system-for-database-systems/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description></item><item><title>基于CNN LSTM的用户购买行为预测模型</title><link>https://yanyulinxi.github.io/post/paperreading/%E5%9F%BA%E4%BA%8Ecnn-lstm%E7%9A%84%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</link><pubDate>Thu, 16 Sep 2021 15:30:42 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/%E5%9F%BA%E4%BA%8Ecnn-lstm%E7%9A%84%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description></item><item><title>Detection and Prevention of Malicious Activites on RdBMS Relational Database Management Systems</title><link>https://yanyulinxi.github.io/post/paperreading/detection-and-prevention-of-malicious-activites-on-rdbms-relational-database-management-systems/</link><pubDate>Thu, 16 Sep 2021 14:48:04 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/detection-and-prevention-of-malicious-activites-on-rdbms-relational-database-management-systems/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description></item><item><title>DBrain数据库异常分析功能分析</title><link>https://yanyulinxi.github.io/post/paperreading/dbrain%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%82%E5%B8%B8%E5%88%86%E6%9E%90%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90/</link><pubDate>Wed, 15 Sep 2021 16:35:37 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/dbrain%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BC%82%E5%B8%B8%E5%88%86%E6%9E%90%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90/</guid><description>https://cloud.tencent.com/document/product/1130/49731 功能记录 支持7，30，3个月的数据。 异常行为统计 异常时间登录 异常操作 异常ip登录 异常资源访问 告警列表 目前总结的几种检测异常的方法（全局，并</description></item><item><title>一种无监督的数据库用户行为异常检测方法</title><link>https://yanyulinxi.github.io/post/paperreading/%E4%B8%80%E7%A7%8D%E6%97%A0%E7%9B%91%E7%9D%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95/</link><pubDate>Wed, 15 Sep 2021 15:45:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/%E4%B8%80%E7%A7%8D%E6%97%A0%E7%9B%91%E7%9D%A3%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 概述 定义 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于</description></item><item><title>Using RNN for Dexompiliation</title><link>https://yanyulinxi.github.io/post/paperreading/using-rnn-for-dexompiliation/</link><pubDate>Sun, 12 Sep 2021 16:27:43 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/using-rnn-for-dexompiliation/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 预处理 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业</description></item><item><title>Recognizing Functions in Binaries With Neural Networks</title><link>https://yanyulinxi.github.io/post/paperreading/recognizing-functions-in-binaries-with-neural-networks/</link><pubDate>Sun, 12 Sep 2021 15:34:32 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/recognizing-functions-in-binaries-with-neural-networks/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description></item><item><title>Leetcode1_数组</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode1_%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 09 Sep 2021 15:05:06 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode1_%E6%95%B0%E7%BB%84/</guid><description>登录 https://zhuanlan.zhihu.com/p/119999079 704 二分法搜查数组 这个可以用递归处理的问题，就可以用循环处理。 多思考极端元素时的处理办法。一个元素，两个元素等。 注意处理边界，每次mid</description></item><item><title>Vue学习</title><link>https://yanyulinxi.github.io/post/study/wechatdevelopment/vue%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 08 Sep 2021 17:00:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/wechatdevelopment/vue%E5%AD%A6%E4%B9%A0/</guid><description>其他 使用Vscode写html，一个！号后可以选择模板。 引入Vue框架 &amp;lt;script src=&amp;quot;https://unpkg.com/vue@next&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 练手： https://gitee.com/panjiachen/vue-admin-template 基础 创建实例, 支持链式。返回同一个实例。 Vue.createAPP({}) .component(&amp;#34;&amp;#34;) .directive 挂载到组件 const</description></item><item><title>前人所思所想</title><link>https://yanyulinxi.github.io/post/essay/thought/%E5%89%8D%E4%BA%BA%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3/</link><pubDate>Wed, 08 Sep 2021 09:53:18 +0800</pubDate><guid>https://yanyulinxi.github.io/post/essay/thought/%E5%89%8D%E4%BA%BA%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3/</guid><description>自我感动 我们总是容易用一种自虐的方式制造出一种痴情的假象来使得自己站在感情的道德制高点上，获得一种畸形的满足感和安全感。其实无论是雪夜去对方</description></item><item><title>信息安全技术大赛两个项目汇报</title><link>https://yanyulinxi.github.io/post/paperreading/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%8A%A5/</link><pubDate>Sun, 05 Sep 2021 14:49:07 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%8A%A5/</guid><description>DeepVuler 面向开源社区的漏洞挖掘平台 目标 通过社区对代码漏洞的讨论进行分析，完成以下几个任务： 发现社区讨论的新漏洞情报，使用神经网络对漏洞讨论内容进行</description></item><item><title>EnglishLearning</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 30 Aug 2021 16:16:00 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</guid><description>英语学习方法： 跟读 你有什么相见恨晚的英语学习方法？ - 翘囤奶爸的回答 - 知乎 https://www.zhihu.com/question/26677313/answer/777772073 输入+输出 背课文+写作。</description></item><item><title>科研工具mark</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7mark/</link><pubDate>Wed, 21 Jul 2021 10:05:44 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7mark/</guid><description>画图： 如何在论文中画出漂亮的插图？ - 隐生宙的回答 - 知乎 https://www.zhihu.com/question/21664179/answer/52278440 论文写作注意: 论文常用词汇i.e.，e.g.，etc.，viz.，et al.的前世今</description></item><item><title>前人科研经验</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E5%89%8D%E4%BA%BA%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/</link><pubDate>Wed, 21 Jul 2021 08:50:19 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E5%89%8D%E4%BA%BA%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/</guid><description>科研十条，学会讲故事，说他人想听的话 作者：刀可它盆盆 链接：https://www.zhihu.com/question/337000233/</description></item><item><title>厨神培养计划</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E5%8E%A8%E7%A5%9E%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 05 Jul 2021 09:18:29 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E5%8E%A8%E7%A5%9E%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/</guid><description>美食试错表 烤披萨： 有肉很好吃。不要将鸡蛋打在中间，有水很难熟。饼底需要提前烤5分钟。玉米很难熟。放肉好了，蔬菜有点难熟。 土豆饼 土豆切丝，调味</description></item><item><title>钢琴学习记录</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 13 Jun 2021 09:35:45 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid><description>记录自己的钢琴音乐学习之旅。 自我总结经验： 1. 练琴时，脑子要处理很多信息。绝对不是闭着眼睛弹 2. 还有人问练琴的意义。要明白练琴本身带来的快乐已经</description></item><item><title>“Code Completion by Modeling Flattened Abstract Syntax Trees as Graphs”阅读笔记</title><link>https://yanyulinxi.github.io/post/paperreading/code-completion-by-modeling-flattened-abstract-syntax-trees-as-graphs%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 13 Apr 2021 10:40:02 +0800</pubDate><guid>https://yanyulinxi.github.io/post/paperreading/code-completion-by-modeling-flattened-abstract-syntax-trees-as-graphs%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</guid><description>目录： 1. 综述翻译 2. Tag 3. 任务描述 4. 方法 5. 解决了什么问题（贡献） 6. 实验结果 7. 如何想到该方法 8. 我能否想到该方法 9. 创新点是什么 10. 如何用于本专业 11. 该方</description></item><item><title>好词好句随记</title><link>https://yanyulinxi.github.io/post/essay/thought/%E5%A5%BD%E8%AF%8D%E5%A5%BD%E5%8F%A5%E9%9A%8F%E8%AE%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yanyulinxi.github.io/post/essay/thought/%E5%A5%BD%E8%AF%8D%E5%A5%BD%E5%8F%A5%E9%9A%8F%E8%AE%B0/</guid><description>如何用鲁迅的口吻官宣恋爱 1.先前总觉得思念二字极为俗气，自遇你以后我自觉只是个俗人。 2.我平素里是不善言辞的，故而写下这三两句闲词，也依稀记</description></item></channel></rss>