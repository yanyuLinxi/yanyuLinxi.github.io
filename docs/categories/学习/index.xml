<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学习 on 阳阳的人间旅游日记</title><link>https://yanyulinxi.github.io/categories/%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 学习 on 阳阳的人间旅游日记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 04 May 2022 15:02:50 +0800</lastBuildDate><atom:link href="https://yanyulinxi.github.io/categories/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>（置顶）机器学习面经总结</title><link>https://yanyulinxi.github.io/post/study/deeplearning/%E7%BD%AE%E9%A1%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 07 Apr 2022 09:58:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/%E7%BD%AE%E9%A1%B6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</guid><description>机器学习面经知识 笔者是22年参加实习的机器学习方向的学生，自己总结了面经，先开源出来供大家学习。</description></item><item><title>Pytest测试框架</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pytest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</link><pubDate>Wed, 04 May 2022 15:02:50 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pytest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/</guid><description>1. Pytest简介 Pytest 是用于测试 Python 应用的 Python 库。它是nose测试和unittest测试的替代方法。相比于后两者来说，Pytest更加简易。Vsc</description></item><item><title>Seaborn学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Mon, 02 May 2022 08:51:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>1. 怎么写教程 seaborn结合pandas来画好看的图。 最后网页显示的统计图，可以用seaborn画。 介绍画图通用API 画图（多种参数传入方</description></item><item><title>Tree_sitter基础教程</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/tree_sitter%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link><pubDate>Tue, 19 Apr 2022 09:24:18 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/tree_sitter%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid><description>安装 首先需要安装VC++14.0或以上。下载链接：https://docs.microsoft.com/en-US/cpp/windows/</description></item><item><title>Huggingface基本使用介绍</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/huggingface%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 08 Apr 2022 09:00:50 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/huggingface%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</guid><description>1. 这个教程怎么写 大致介绍。整个模型在干嘛。简单介绍一下主要的几个模块 给出代码流程示例： autoclass 微调 和 pipeline直接训练。 再详细讲解下主要模块</description></item><item><title>Pytorch不常用命令随记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pytorch%E4%B8%8D%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9A%8F%E8%AE%B0/</link><pubDate>Thu, 07 Apr 2022 23:05:34 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pytorch%E4%B8%8D%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9A%8F%E8%AE%B0/</guid><description>预训练模型导入和更改结构 导入VGG import torchvision.models as models vgg = models.vgg11(pretrained=False) # 查看vgg: print(vgg) &amp;#34;&amp;#34;&amp;#34; VGG( (features): Sequential( (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)) ... ... (classifier): Sequential( (0): Linear(in_features=25088, out_features=4096, bias=True) (1): ReLU(inplace=True) (2): Dropout(p=0.5, inplace=False) (3): Linear(in_features=4096, out_features=4096, bias=True) (4): ReLU(inplace=True) (5): Dropout(p=0.5, inplace=False) (6): Linear(in_features=4096, out_features=1000,</description></item><item><title>SHAP使用简略教程-特征解释方案</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/shap%E4%BD%BF%E7%94%A8%E7%AE%80%E7%95%A5%E6%95%99%E7%A8%8B/</link><pubDate>Thu, 07 Apr 2022 20:32:22 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/shap%E4%BD%BF%E7%94%A8%E7%AE%80%E7%95%A5%E6%95%99%E7%A8%8B/</guid><description>SHAP简介 SHAP全称是SHapley Additive exPlanation, 属于模型事后解释的方法，可以对复杂机器学习模型进行解释。 Shapley 值是博弈论中使用的解决方案概念，涉及将</description></item><item><title>Bat脚本常用命令浅学</title><link>https://yanyulinxi.github.io/post/study/pcsoftware/bat%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B5%85%E5%AD%A6/</link><pubDate>Thu, 07 Apr 2022 10:24:25 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/pcsoftware/bat%E8%84%9A%E6%9C%AC%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B5%85%E5%AD%A6/</guid><description>基础语法 赋值的时候等号两边没有空格 set a=%b 取值：%a 输出变量：%a% 常用命令 @REM 注释 xcopy 批量复制文件夹 实例： xcopy /e/y/i/f source destination 参数解释： /e 复制所有子目录，即使</description></item><item><title>Word2vec讲解和面经</title><link>https://yanyulinxi.github.io/post/study/deeplearning/word2vec%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E7%BB%8F/</link><pubDate>Sat, 26 Feb 2022 16:10:37 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/deeplearning/word2vec%E8%AE%B2%E8%A7%A3%E5%92%8C%E9%9D%A2%E7%BB%8F/</guid><description>介绍 Word2Vec是从大量文本语料中以无监督的方式学习语义知识的一种模型 通过一个嵌入空间使得语义上相似的单词在该空间内距离很近。 它的输入都</description></item><item><title>IntellijIDEA技巧</title><link>https://yanyulinxi.github.io/post/study/java/intellijidea%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 10 Jan 2022 19:19:19 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/intellijidea%E6%8A%80%E5%B7%A7/</guid><description>快捷键： 一个函数调用完了后，输入.var可以快速将其赋值。 Scala可以输入.val快速赋值。 快捷键 ctrl H 搜索。</description></item><item><title>JavaParser学习</title><link>https://yanyulinxi.github.io/post/study/java/javaparser%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 10 Jan 2022 09:45:33 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/javaparser%E5%AD%A6%E4%B9%A0/</guid><description>Pretty Printing是用来将AST打印成代码的。 NodeText和具体的语法模型 Void foo (int a ){} Type child: void Name child: foo param child: int a body child: {} TreeVisitor。使</description></item><item><title>Electron学习</title><link>https://yanyulinxi.github.io/post/study/ui/electron%E5%AD%A6%E4%B9%A0/</link><pubDate>Sun, 09 Jan 2022 22:45:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/ui/electron%E5%AD%A6%E4%B9%A0/</guid><description>electron打包程序 https://segmentfault.com/a/1190000013924153 electron简单入门</description></item><item><title>其他有用有趣的软件记录</title><link>https://yanyulinxi.github.io/post/study/pcsoftware/%E5%85%B6%E4%BB%96%E6%9C%89%E7%94%A8%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 07 Jan 2022 15:51:54 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/pcsoftware/%E5%85%B6%E4%BB%96%E6%9C%89%E7%94%A8%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BD%AF%E4%BB%B6%E8%AE%B0%E5%BD%95/</guid><description>Balsamiq 画图软件。</description></item><item><title>Scala学习</title><link>https://yanyulinxi.github.io/post/study/java/scala%E5%AD%A6%E4%B9%A0/</link><pubDate>Thu, 06 Jan 2022 11:37:01 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/scala%E5%AD%A6%E4%B9%A0/</guid><description>scala学习网站 https://www.w3cschool.cn/scala/scala-index.html 专为spark学习：https://www.bilibili.com/video/BV1oJ411m7z3?p=11 基础</description></item><item><title>Java重拾</title><link>https://yanyulinxi.github.io/post/study/java/java%E9%87%8D%E6%8B%BE/</link><pubDate>Wed, 05 Jan 2022 15:49:38 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/java/java%E9%87%8D%E6%8B%BE/</guid><description>基本数据类型： 小数默认double。float数值需要额外添加字母f 长整型245L 理解： 申明，基本类型申明的是变量，是深度拷贝，类申明的是引</description></item><item><title>Spark学习计划</title><link>https://yanyulinxi.github.io/post/study/spark/spark%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</link><pubDate>Tue, 04 Jan 2022 09:43:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/spark/spark%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</guid><description>spark学习计划：https://zhuanlan.zhihu.com/p/384903354 Scala学习《Scala实用指南》 然后书籍</description></item><item><title>Pandas学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 09:40:51 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>资料 https://github.com/datawhalechina/joyful-pandas pandas 临时杂碎知识点记录 .null()检测是否有空值 .sum()对pandas数值进行求和 .unique()检测pandas中的独一值。 t</description></item><item><title>Pandas学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 24 Nov 2021 09:40:51 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>资料 https://github.com/datawhalechina/joyful-pandas pandas 临时杂碎知识点记录 .null()检测是否有空值 .sum()对pandas数值进行求和 .unique()检测pandas中的独一值。 t</description></item><item><title>Shap学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 14 Nov 2021 17:08:21 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/shap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>api 随笔记 shap.force_plot这个函数应该是打印对于这个样本，哪些权重做出了贡献。</description></item><item><title>Mysql_21mins_tutorial</title><link>https://yanyulinxi.github.io/post/study/server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/mysql/mysql_21mins_tutorial/</link><pubDate>Mon, 08 Nov 2021 15:54:52 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/server%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/mysql/mysql_21mins_tutorial/</guid><description>快速入门 MySQL 为关系型数据库(Relational Database Management System)，一个关系型数据库由一个或数个表格组成 表头(header): 每一列的名称; 列</description></item><item><title>Gensim学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 22 Oct 2021 10:29:55 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>使用腾讯中文语料库 腾讯词向量使用方法： https://www.jianshu.com/p/65a29663130a 语料库地址： https://ai.tencent.com/ailab/nlp/zh/embedding.html 语料库 chinese-word-vectors: https://github.com/Embedding/Chinese-Word-Vectors 300维 腾讯词向量： https://www.jianshu.com/p/65a29663130a 200维，800万词。 其他多语言语料库 https://sites.google.com/site/rmyeid/projects/polyglot 使用gensi</description></item><item><title>Gensim学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 22 Oct 2021 10:29:55 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/gensim%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>使用腾讯中文语料库 腾讯词向量使用方法： https://www.jianshu.com/p/65a29663130a 语料库地址： https://ai.tencent.com/ailab/nlp/zh/embedding.html 语料库 chinese-word-vectors: https://github.com/Embedding/Chinese-Word-Vectors 300维 腾讯词向量： https://www.jianshu.com/p/65a29663130a 200维，800万词。 其他多语言语料库 https://sites.google.com/site/rmyeid/projects/polyglot 使用gensi</description></item><item><title>Leetcode3_hash表</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode3_hash%E8%A1%A8/</link><pubDate>Wed, 20 Oct 2021 15:03:30 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode3_hash%E8%A1%A8/</guid><description>基础知识 hash将通过hash函数将某个东西转为数值，然后存在哈希表上。这个哈希表可能是数组，也可能是红黑树等等。 如果hashCode的数值</description></item><item><title>视频剪辑计划</title><link>https://yanyulinxi.github.io/post/study/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E8%AE%A1%E5%88%92/</link><pubDate>Tue, 19 Oct 2021 09:37:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E8%AE%A1%E5%88%92/</guid><description>视频剪辑计划 泰坦陨落2 视频剪辑音乐</description></item><item><title>Python命名规范</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</link><pubDate>Tue, 12 Oct 2021 10:37:40 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</guid><description>从大到小 从大到小 命名规范 样例 包名 全小写 sklearn 模块名 全小写，下划线分割 sklearn.model_selection 类名 首字母大写、驼峰(类名不加下划线) ThisIsMyClass, TruncatedSVD 函数名 全小写、用下划线增加可读性</description></item><item><title>PyOD学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 09 Oct 2021 15:51:08 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>注意 里面有很多需要其他库的神经网络。比如keras。比如tensorflow。为了避免最后太过复杂，这些自己写最好。 样例 生成污染数据 contamination = 0.1 #</description></item><item><title>PyOD学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 09 Oct 2021 15:51:08 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/pyod%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>注意 里面有很多需要其他库的神经网络。比如keras。比如tensorflow。为了避免最后太过复杂，这些自己写最好。 样例 生成污染数据 contamination = 0.1 #</description></item><item><title>Leetcode2_链表</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode2_%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 09 Oct 2021 15:12:27 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode2_%E9%93%BE%E8%A1%A8/</guid><description>203 移除链表元素 头节点是什么呢。头节点就是一个空的节点但指向第一个节点。保证了在处理其他节点的时候保持操作一致。返回的时候返回头节点的下一个节</description></item><item><title>Seaborn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 30 Sep 2021 08:51:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/seaborn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>seaborn结合pandas来画好看的图。 最后网页显示的统计图，可以用seaborn画。 基本使用 seaborn中两种函数，第一种返回当前设</description></item><item><title>常用其他python库</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</link><pubDate>Thu, 30 Sep 2021 08:41:46 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/%E5%B8%B8%E7%94%A8%E5%85%B6%E4%BB%96python%E5%BA%93/</guid><description>常用库 yellowbrick 用来可视化画图的。 seaborn高端matplotlib画图的。 prettyplotlib 配合seaborn来画漂亮的图。 plotly Express 可视化。 tqdm进度条。 lin</description></item><item><title>Matplotlib-2学习</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 10:20:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 setting 不同风格 plt.style.available 打印样式列表 plt.style.use(&amp;lsquo;seaborn&amp;rsquo;) 使用seaborn风格的图。 参数color可选项： b:blue c:cyan g:green k:black m:magenta r:red w:white y:yellow 结束时 plt.legend() 在图上放置图例。 设置坐标轴 plt.xlim(-1, 3.5) #设置</description></item><item><title>Matplotlib-2学习</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 10:20:26 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/matplotlib%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 setting 不同风格 plt.style.available 打印样式列表 plt.style.use(&amp;lsquo;seaborn&amp;rsquo;) 使用seaborn风格的图。 参数color可选项： b:blue c:cyan g:green k:black m:magenta r:red w:white y:yellow 结束时 plt.legend() 在图上放置图例。 设置坐标轴 plt.xlim(-1, 3.5) #设置</description></item><item><title>Numpy学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 08:31:57 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>API 创建数组 numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0) np.linspace(2.0, 3.0, num=5) output =&amp;gt; array([2. , 2.25, 2.5 , 2.75, 3. ]) np.random random.rand(d0, d1, &amp;hellip;, dn) d为size np.random.randn(d0, d1, &amp;hellip;, dn) Return a sample (or samples) from the “standard normal” distribution. random.randint(low, high=None, size=None, dtype=int) np.random.randint([1, 5,</description></item><item><title>Numpy学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 29 Sep 2021 08:31:57 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>API 创建数组 numpy.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0) np.linspace(2.0, 3.0, num=5) output =&amp;gt; array([2. , 2.25, 2.5 , 2.75, 3. ]) np.random random.rand(d0, d1, &amp;hellip;, dn) d为size np.random.randn(d0, d1, &amp;hellip;, dn) Return a sample (or samples) from the “standard normal” distribution. random.randint(low, high=None, size=None, dtype=int) np.random.randint([1, 5,</description></item><item><title>Scikit Learn学习笔记</title><link>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 28 Sep 2021 20:18:10 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/python%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 整体框架 unsupervised unsupervised methods cluster API validation API metrics models embedding Cluster Overview Unsupervised dimensionality reduction PCA Random projections johnson_lindenstrauss_min_dim GaussianRandomProjection SparseRandomProjection Feature agglomeration 概览 整体框架 # set numpy seed. when it comes to random functions, please leave a function to set seed. # load data x, y = sklearn.data # train test data split. # create model entity model =</description></item><item><title>Scikit Learn学习笔记</title><link>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 28 Sep 2021 20:18:10 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%BA%93/scikit-learn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>概览 整体框架 unsupervised unsupervised methods cluster API validation API metrics models embedding Cluster Overview Unsupervised dimensionality reduction PCA Random projections johnson_lindenstrauss_min_dim GaussianRandomProjection SparseRandomProjection Feature agglomeration 概览 整体框架 # set numpy seed. when it comes to random functions, please leave a function to set seed. # load data x, y = sklearn.data # train test data split. # create model entity model =</description></item><item><title>Leetcode1_数组</title><link>https://yanyulinxi.github.io/post/study/leetcode/leetcode1_%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 09 Sep 2021 15:05:06 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/leetcode/leetcode1_%E6%95%B0%E7%BB%84/</guid><description>登录 https://zhuanlan.zhihu.com/p/119999079 704 二分法搜查数组 这个可以用递归处理的问题，就可以用循环处理。 多思考极端元素时的处理办法。一个元素，两个元素等。 注意处理边界，每次mid</description></item><item><title>Vue学习</title><link>https://yanyulinxi.github.io/post/study/wechatdevelopment/vue%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 08 Sep 2021 17:00:28 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/wechatdevelopment/vue%E5%AD%A6%E4%B9%A0/</guid><description>其他 使用Vscode写html，一个！号后可以选择模板。 引入Vue框架 &amp;lt;script src=&amp;quot;https://unpkg.com/vue@next&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 练手： https://gitee.com/panjiachen/vue-admin-template 基础 创建实例, 支持链式。返回同一个实例。 Vue.createAPP({}) .component(&amp;#34;&amp;#34;) .directive 挂载到组件 const</description></item><item><title>EnglishLearning</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 30 Aug 2021 16:16:00 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</guid><description>英语学习方法： 跟读 你有什么相见恨晚的英语学习方法？ - 翘囤奶爸的回答 - 知乎 https://www.zhihu.com/question/26677313/answer/777772073 输入+输出 背课文+写作。</description></item><item><title>厨神培养计划</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E5%8E%A8%E7%A5%9E%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/</link><pubDate>Mon, 05 Jul 2021 09:18:29 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E5%8E%A8%E7%A5%9E%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/</guid><description>美食试错表 烤披萨： 有肉很好吃。不要将鸡蛋打在中间，有水很难熟。饼底需要提前烤5分钟。玉米很难熟。放肉好了，蔬菜有点难熟。 土豆饼 土豆切丝，调味</description></item><item><title>钢琴学习记录</title><link>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 13 Jun 2021 09:35:45 +0800</pubDate><guid>https://yanyulinxi.github.io/post/study/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/%E9%92%A2%E7%90%B4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid><description>记录自己的钢琴音乐学习之旅。 自我总结经验： 1. 练琴时，脑子要处理很多信息。绝对不是闭着眼睛弹 2. 还有人问练琴的意义。要明白练琴本身带来的快乐已经</description></item></channel></rss>